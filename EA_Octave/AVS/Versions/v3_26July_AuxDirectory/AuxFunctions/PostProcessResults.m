%%  DESCRIPTION: Do postprocessing on table to put trigger and command that were 
%%                recorded seperately by alexa, into the same row. Also, add
%%                add additional column for triggerID in the X.Y.Z format, where
%%                X is trigger num, Y is distance num and Z is noise num.
%%  INPUT: 'oldResultTable' is the processed result table generated by calling 
%%            CreateResults(). 'trigInDistNum' is number of triggers within a
%%            distance group. 'distInNoiseNum' is number of distance groups
%%            within a noise group. 'noiseTotalNum' is total number of noise
%%            groups. 'noiseTotalNum' is not used yet, but can be used to find
%%            the total expected triggers num (noiseNum * distNum * trigNum)
%%  OUTPUT: 'resultTable' is the post-processed table
%%  ERRORS: NA
%%  LAST MODIFIED: 25/07/2018

function resultTable = PostProcessResults (oldResultTable, trigInDistNum, 
                        distInNoiseNum, noiseTotalNum)
  numOfRows = rows(oldResultTable);
  curNewRow = 1;
  curTrigNum = 1;
  curDistNum = 1;
  curNoiseNum = 1;
  for curRow = 2:numOfRows
    curStr = char(oldResultTable(curRow,1));
    if (isempty(strfind(curStr, "alexa")))
      prevStr = char(oldResultTable(curRow-1,1));
      curStr = char(oldResultTable(curRow,1));
      newStr = strcat(prevStr, curStr);
      oldResultTable(curRow-1, 1) = cellstr(newStr);
      oldResultTable(curRow-1, 2:5) = oldResultTable(curRow, 2:5);
      oldResultTable(curRow, 1:5) = " ";
    endif
  endfor
  for curRow = 1:numOfRows
    if (strcmp(char(oldResultTable(curRow,1))," "))
      continue;
    else
      resultTable(curNewRow,1:5) = oldResultTable(curRow, 1:5);
      if (-1 == cell2mat(resultTable(curNewRow,5)))
        resultTable(curNewRow,6) = cellstr(num2str(-1));
      else  
        resultTable(curNewRow,6) = cellstr(sprintf("%d.%d.%d", curTrigNum, 
                                    curDistNum, curNoiseNum));
        ++curTrigNum;
        if (curTrigNum > trigInDistNum)
          curTrigNum = 1;
          ++curDistNum;
        endif
        if (curDistNum > distInNoiseNum)
          curDistNum = 1;
          ++curNoiseNum;
        endif
      endif
      ++curNewRow;
    endif
  endfor
endfunction